version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

services:

### Workspace Utilities ##################################
  workspace:
    build: ./workspace
    environment:
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - WORKSPACE_NCPU=${WORKSPACE_NCPU}
      - WORKSPACE_MEMORY=${WORKSPACE_MEMORY}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${DATA_PATH_HOST}/pbf:${APP_CODE_PATH_CONTAINER}/pbf
      - ./maps-config/osm-bright.tm2source/imposm_mapping.yml:/etc/imposm/mapping.yml
      - ./workspace/osm-initial-import.sh:/usr/bin/osm-initial-import

    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    tty: true
    networks:
      - frontend
      - backend

### Kartotherian ##################################
  kartotherian:
    build: ./kartotherian
    ports:
      - "6533:6533"
      - "16534:16534"
    environment:
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGPORT=5432
      - PGHOST=postgres-postgis
    depends_on:
      - workspace
      - postgres-postgis
      - tegola
    volumes:
      - ${APP_CODE_PATH_HOST}/kartotherian:/home/kartotherian
      - ${APP_CODE_PATH_HOST}/dependencies:/srv/dependencies
      - ${DATA_PATH_HOST}/imposm:/srv/imposm
      - ./kartotherian/sources.docker.yaml:/etc/opt/sources.docker.yaml
    tty: true
    networks:
      - frontend
      - backend
    extra_hosts:
      # FIXME: dynamically get host gateway
      - dev.wiki.local.wmftest.net:172.17.0.1

### PostgreSQL PostGis ##################################
  postgres-postgis:
    image: postgis/postgis:11-3.1
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
    ports:
      - "${PGPORT:-5432}:5432"
    environment:
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
    depends_on:
      - workspace
    networks:
      - backend

### Redis ##################################
  redis:
    image: redis:latest
    volumes:
        - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - backend


### Tegola ##################################
  tegola:
    image: gospatial/tegola:v0.14.0
    volumes:
      - ./maps-config/tegola/tegola.toml:/etc/tegola.toml
      - ${DATA_PATH_HOST}/tegola/cache:/etc/cache
    ports:
      - "${TEGOLA_PORT:-8080}:8080"
    environment:
      - DB_HOST=postgres-postgis
      - DB_PORT=${PGPORT}
      - DB_USER=${PGUSER}
      - DB_PASSWORD=${PGPASSWORD}
      - DB_NAME=${PGDATABASE}
    depends_on:
      - postgres-postgis
      - redis
    networks:
      - backend
    restart: on-failure:5
    command: serve --config /etc/tegola.toml

### Maputnik ##################################
  maputnik:
    image: maputnik/editor:latest
    ports:
      - "${MAPUTNIK_PORT:-8888}:8888"
    networks:
      - frontend
      - backend

### Testing ##################################
  osmosis:
    build:
      context: ./smoketests
      dockerfile: build.Dockerfile
    volumes:
      - ${DATA_PATH_HOST}/pbf:/etc/pbf

  test:
    build:
      context: ./
      dockerfile: smoketests/test.Dockerfile
    environment:
      - PGDATABASE=${PGDATABASE:-gis}
      - PGUSER=${PGUSER:-default}
      - PGPASSWORD=${PGPASSWORD:-secret}
      - POSTGRES_DB=${PGDATABASE:-gis}
      - POSTGRES_USER=${PGUSER:-default}
      - POSTGRES_PASSWORD=${PGPASSWORD:-secret}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ${APP_CODE_PATH_HOST:-..}/kartodock:/etc/kartodock
